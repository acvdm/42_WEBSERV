# ajouter root niveau du serveur
# modifier nom _location_alias
# creer etape de validation du root au niveau du serveur
# checker les fonctions existentes pour verifier qu'elles recuperent le bon chemin en fonction de si presence dun alias ou si besoin de recuperer le root


server{
    listen 127.0.0.1:8080;
    server_name localhost wwww.monsite.com;
    error_page 400 /error_pages/400.html;
    error_page 401 /error_pages/401.html;
    error_page 403 /error_pages/403.html;
    error_page 404 /error_pages/404.html;
    error_page 405 /error_pages/405.html;
    error_page 408 /error_pages/408.html;
    error_page 413 /error_pages/413.html;
    error_page 414 /error_pages/414.html;
    error_page 415 /error_pages/415.html;
    error_page 429 /error_pages/429.html;
    error_page 500 /error_pages/500.html;
    error_page 501 /error_pages/501.html;
    error_page 502 /error_pages/502.html;
    error_page 503 /error_pages/503.html;
    error_page 504 /error_pages/504.html;
    root ./www/;

    index index.html; 

    # location / {
    #     alias ./www/;
    #     methods GET;
    # }

    location /images/ { #images derreur
        alias ./www/images/;
        index awake_script.jpg;
        autoindex off;
        error_page 409 /errors/409.html;
    }

    location /post_contact { # endpoint logique, ne correspond pas a un dossier physique
        alias ./www/; 
        # si chemin pas valide on renvoit une erreur 500, on ne tente pas dacceder au root du serveur
        # on tente d'acceder au root du serveur que si il ny a pas d'alias definit
        upload_path ./www/data/; 
        # pour telecharger les donnees
        # si chemin pas valide on renvoit une erreur 500
        # si chemin inexistant on utilise l'alias, si l'alias existe pas on utilise le root du serveur
        autoindex on;
        error_page 409 /errors/409.html;
        methods GET POST;
    }

    location /page_upload { # fichier html d'upload
        methods POST DELETE GET;
        upload_path ./www/upload/;
        allowed_extensions .png .jpg .jpeg .pdf .txt .cpp .ico;
        client_max_body_size 1m;
        # autoindex on;
    }

    location /upload/ { # donnees telechargees
        methods DELETE GET;
        autoindex OFF;
        alias ./www/upload/;
    }

    # location /data/ { # donnees telechargees
    #     methods DELETE GET;
    #     autoindex OFF;
    #     alias ./www/upload/;
    # }

    location /cgi-bin/ { # endpoint
		cgi .py /usr/bin/python3;
        cgi .sh /usr/bin/bash;
        cgi .php /usr/bin/php-cgi;
        alias ./www/cgi-bin/;
        client_max_body_size 1M;
        autoindex on;
        methods POST GET; 
        allowed_data_dir ./www/data/;
	}

    location /error_pages/ {
        alias ./www/error_pages/;
        autoindex on;
    }
}

# chercher alias dans la location -> si present utiliser
# sinon chercher root dans la location ->   si present utiliser
# sinon utiliser le root du serveur 



# REVOIR LA GESTION DERREUR QUAND AUTOINDEX EST OFF

# Si index defini dans serveur, mais pas dans location
# http://localhost:8080/cgi-bin/ → regarde dans ./www/cgi-bin/.
# Si index.html existe dans ./www/cgi-bin/ → on sert ce fichier.
# Sinon →
#           si autoindex on; → listing du dossier
#           sinon → 403


# server{
#     listen 127.0.0.1:8080;
#     index index.html;
#     client_max_body_size 1m;

#     error_page 400 /error_pages/400.html;
#     error_page 401 /error_pages/401.html;
#     error_page 403 /error_pages/403.html;
#     error_page 404 /error_pages/404.html;
#     error_page 405 /error_pages/405.html;
#     error_page 408 /error_pages/408.html;
#     error_page 413 /error_pages/413.html;
#     error_page 414 /error_pages/414.html;
#     error_page 415 /error_pages/415.html;
#     error_page 429 /error_pages/429.html;
#     error_page 500 /error_pages/500.html;
#     error_page 501 /error_pages/501.html;
#     error_page 502 /error_pages/502.html;
#     error_page 503 /error_pages/503.html;
#     error_page 504 /error_pages/504.html;
# }

# server{
#     listen 127.0.0.1:8080;
#     # index index.html;
# }

# server{
#     listen 127.0.0.1:8080;
#     # index index.html;
# }

# BOUTON POST, GET, DELET
# formulaire de test methode POST
# + ulpoad a file
# create file.txt on the server
# Nom du fichier Contenu du fichier
# (using CGI)
# Le fichier bidule a ete cree avec succes
#delete => delete et liste deroulante avec fichiers ou entrer directement nom et chemin vers fichier
# upload a file on server
# downliad a file
# redirection