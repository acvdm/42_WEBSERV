
# if the endpoint does not exist, we cannot create a task with POST method
# if a location for a directory doesn't exist ther is no listing response


server{
	listen 127.0.0.1:8080;
	server_name localhost wwww.monsite.com;
	error_page 400 /error_pages/400.html;
	error_page 401 /error_pages/401.html;
	error_page 403 /error_pages/403.html;
	error_page 404 /error_pages/404.html;
	error_page 405 /error_pages/405.html;
	error_page 408 /error_pages/408.html;
	error_page 413 /error_pages/413.html;
	error_page 414 /error_pages/414.html;
	error_page 415 /error_pages/415.html;
	error_page 429 /error_pages/429.html;
	error_page 500 /error_pages/500.html;
	error_page 501 /error_pages/501.html;
	error_page 502 /error_pages/502.html;
	error_page 503 /error_pages/503.html;
	error_page 504 /error_pages/504.html;
	root ./www/;

	index index.html; 

	# location / {
	#     alias ./www/;
	#     methods GET;
	# }

	# Logical endpoint for the contact form
	location /post_contact {
		alias ./www/;
		# si chemin pas valide on renvoit une erreur 500, on ne tente pas dacceder au root du serveur
		# on tente d'acceder au root du serveur que si il ny a pas d'alias definit
		upload_path ./www/data/;
		# si pas dupload path defini -> erreur 500
		# si defini mais que dossier existe pas -> erreur 500
		error_page 409 /errors/409.html;
		methods GET POST;
	}

	# Logical endpoint for the to do form
	location /post_todo { 
		alias ./www/;
		upload_path ./www/data/;
		error_page 409 /errors/409.html;
		methods GET POST DELETE; #verifier si foncitonne avec methodes et sans
	}

	# Logical endpoint for the upload of files
    location /page_upload {
		alias ./www/;
        methods POST DELETE GET;
		upload_path ./www/upload/;
        allowed_extensions .png .jpg .jpeg .pdf .txt .cpp .ico;
        client_max_body_size 1m;
    }

	# Directory for the datas download from page_upload.html
    location /upload/ { 
        methods DELETE GET;
        autoindex on;
        alias ./www/upload/;
    }

	# Directory for the datas download from post_contact.html and post_todo.html
    location /data/ { 
        methods DELETE GET;
        autoindex on;
        alias ./www/data/;
    }    
	
	# Directory for images (mostly for error pages)
	location /images/ { # images derreur
        alias ./www/images/;
        index awake_script.jpg;
        autoindex on;
        error_page 409 /errors/409.html;
    }

	# Directory for error pages
	location /error_pages/ {
		alias ./www/error_pages/;
		autoindex off;
	}
	# ici listing non autorise et pas de fichier d'index 
	#-> dans le cas dune requete "localhost:8080/error_pages/"" lance -> 403 Forbidden


	# Directory for the cgi
	location /cgi-bin/ {
		cgi .py /usr/bin/python3;
		cgi .sh /usr/bin/bash;
		cgi .php /usr/bin/php-cgi;
		alias ./www/cgi-bin/;
		client_max_body_size 1M;
		autoindex on; # si off servir index du serveur si existant
		methods POST GET; 
		allowed_data_dir ./www/data/;
	}
}

# chercher alias dans la location -> si present utiliser
# sinon chercher root dans la location ->   si present utiliser
# sinon utiliser le root du serveur 



# REVOIR LA GESTION DERREUR QUAND AUTOINDEX EST OFF

# Si index defini dans serveur, mais pas dans location
# http://localhost:8080/cgi-bin/ → regarde dans ./www/cgi-bin/.
# Si index.html existe dans ./www/cgi-bin/ → on sert ce fichier.
# Sinon →
#           si autoindex on; → listing du dossier
#           sinon → 403


# server{
#     listen 127.0.0.1:8080;
#     index index.html;
#     client_max_body_size 1m;

#     error_page 400 /error_pages/400.html;
#     error_page 401 /error_pages/401.html;
#     error_page 403 /error_pages/403.html;
#     error_page 404 /error_pages/404.html;
#     error_page 405 /error_pages/405.html;
#     error_page 408 /error_pages/408.html;
#     error_page 413 /error_pages/413.html;
#     error_page 414 /error_pages/414.html;
#     error_page 415 /error_pages/415.html;
#     error_page 429 /error_pages/429.html;
#     error_page 500 /error_pages/500.html;
#     error_page 501 /error_pages/501.html;
#     error_page 502 /error_pages/502.html;
#     error_page 503 /error_pages/503.html;
#     error_page 504 /error_pages/504.html;
# }

# server{
#     listen 127.0.0.1:8080;
#     # index index.html;
# }

# server{
#     listen 127.0.0.1:8080;
#     # index index.html;
# }

# BOUTON POST, GET, DELET
# formulaire de test methode POST
# + ulpoad a file
# create file.txt on the server
# Nom du fichier Contenu du fichier
# (using CGI)
# Le fichier bidule a ete cree avec succes
#delete => delete et liste deroulante avec fichiers ou entrer directement nom et chemin vers fichier
# upload a file on server
# downliad a file
# redirection